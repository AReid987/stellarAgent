Information Flow: |md

  # Information Flow

  ## Sequence

  1. User prompt →
  2. DSPy →
  3. FastAPI Gateway →
  4. Aider →
  5. Portkey →
  6. Not Diamond
  7. LLM Provider →
  8. Response

| {
  near: top-center
}

# Shapes

Users {
  style: {
		fill: transparent
	}
	MobileUser: {
		style: {
			fill: transparent
		}

		MUser: User {
			shape: Person
		}

		Mobile: {
			shape: image
			icon: https://icons.terrastruct.com/tech%2F052-smartphone-3.svg
		}

		MUser -> Mobile
	}

TabletUser: {
	style: {
		fill: transparent
  }

	TUser: User {
		shape: Person
	}

	Tablet: {
		shape: image
		icon: https://icons.terrastruct.com/tech%2F079-tablet-1.svg
	}

	TUser -> Tablet
}
DesktopUser: {
	style: {
		fill: transparent
	}

  DUser: User {
		shape: Person
	}

	Desktop: {
		shape: image
		icon: https://icons.terrastruct.com/tech%2Fdesktop.svg
	}

	DUser -> Desktop
}
  LaptopUser: {
	  style: {
		  fill: transparent
	}

	LUser: User {
		shape: Person
	}

	Laptop: {
		shape: image
		icon: https://icons.terrastruct.com/tech%2Flaptop.svg
	}

	  LUser -> Laptop
  }
}

Prompt: Start
Prompt.shape: circle

New: New \n Feature \n or \n Product?
New.shape: diamond

DSPy: DSPy
DSPy.shape: document

Reasoning: {
  Reasoning \n Architect
  shape: hexagon
  icon: ../icons/architect.svg
}

Executor: Executor \n Agent
Executor.shape: oval

Test: Test \n Case
Test.shape: page

Write: Write Code
Write.shape: step

Pass: Tests \n Pass?
Pass.shape: diamond

Commit: Git Commit
Commit.shape: step

Actions: GitHub Actions
Actions.shape: queue

Actions.Lint: Run Lint
Actions.Build: Run Build
Actions.Test: Run Test

LintPass: Lint \n Pass?
LintPass.shape: diamond
BuildPass: Build \n Pass?
BuildPass.shape: diamond
TestPass: Test \n Pass?
TestPass.shape: diamond

# Sequence
Users.MobileUser -> Prompt: Start
Users.TabletUser -> Prompt: Start
Users.DesktopUser -> Prompt: Start
Users.LaptopUser -> Prompt: Start

Prompt -> New: Request
New -> DSPy: No
DSPy -> Reasoning: Format \n User Prompt
Reasoning -> Executor: Ustructured \n Output
Executor -> Test: Convert \n to Structured

Test -> Write -> Pass
Pass -> Write: No
Pass -> Commit: Yes

Commit -> Actions: CI/CD
Actions.Lint -> LintPass
Actions.Build -> BuildPass
Actions.Test -> TestPass

LintPass -> Update Documentation: Yes
LintPass -> Auto Fix: No

TestPass -> Auto Fix: No
TestPass -> Test Coverage Satisfied?: Yes

Test Coverage Satisfied? -> Update Documentation: Yes
Update Documentation -> Fireworks
Test Coverage Satisfied? -> Write Tests: No
Write Tests -> Actions.Test

BuildPass -> Auto Fix: No
BuildPass -> Update Documentation: Yes
Auto Fix -> Update Documentation
Fireworks -> devLog Site: Publish

New -> Mixture of Experts: Yes

Mixture of Experts -> Market Research -> Artifact 1: Round 1
Mixture of Experts -> Technical Feasibility -> Artifact 1: Round 1
Mixture of Experts -> User Experience -> Artifact 1: Round 1
